/*  @class  Happy
 *  @brief  sample class definition file
 */
class Happy():
{
    private:
        
        var x:int8                  // instance variable declared
        
    public:
        
        /*  constructor
        *  @brief  set initial value of x
        */
        fun construct():no_value
        {
            x = 9
        }
        
        /*  destructor
        *  @brief  destroy x
        */
        fun destruct():no_value
        {
            del(x)                  // or something that really does it.
        }
        
        /*  tostring
        *  @brief  convert to string
        *  @return (string)
        */
        fun tostring():string
        {
            return tostring(x)
        }
        
        /*  tofloat
        *  @brief  convert to float
        *  @return (float64)
        */
        fun tofloat():float64
        {
            return tofloat(x)       // i'm winging it here
        }
        
        /*  getX
        *  @brief  get value of x
        *  @return (int8)
        */
        fun getX():int8
        {
            return x
        }
        
        /*  setX
        *  @brief  set new x valuet
        *  @param (int8)
        */
        fun setX(in_x:int8):no_value
        {
            x = in_x                // x must remain a int8
        }
        
        /*  loop
        *  @brief  populate a list, with a length of x
        */
        fun loop():no_value
        {
            var numbers: vector
            for var i:int8 = 0 to x:
            {
                write(tostring(numbers))
            }
        }
}

fun main():no_value
{
    H = Happy()                 // instantiate
    H.loop()
    writeln("I am this happy: " + H.tostring())
}
