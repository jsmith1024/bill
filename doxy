#!/usr/bin/bash

# function to generate PDFs
genPdf () {
    # parameters:
    name=$1
    doxyfile="dox/books/${name}/doxyfile"
    tmp_location=/tmp/bill/${name}/latex
    
    # test build folder presence
    if [ ! -d /tmp/bill ]
    then
        mkdir /tmp/bill
    fi
    
    # build if DoxyFile exists
    if [ -f ${doxyfile} ]
    then
        doxygen ${doxyfile}
        retVal=$?
        if [ $retVal -ne 0 ]
        then
            echo "Error: exit code ${retVal} on doxygen ${doxyfile}."
#                 cd $here
            exit $retVal
        fi
        
        # make pdf
        pushd ${tmp_location}
        make
        retVal=$?
        if [ $retVal -ne 0 ]
        then
            echo "Error: exit code ${retVal} on Make of ${doxyfile}."
            popd
            exit $retVal
        fi
        popd
        
        # move pdf to docs
        mv ${tmp_location}/refman.pdf docs/${name}.pdf # TODO: Why is this refman.pdf?
        retVal=$?
        if [ $retVal -ne 0 ]
        then
            echo "Error: exit code ${retVal} on move of pdf from ${tmp_location} to docs/${name}.pdf."
            popd
            exit $retVal
        fi
    else
        echo -e "\n========\nInfo: ${doxyfile} does not exist.\n========\n"
        # future activation
#         echo -e "\n========\nError: ${doxyfile} does not exist.\n========\n"
#         popd
#         exit 1
    fi
}

# copy html forward and config
cp dox/index.html  docs/index.html
cp dox/_config.yml docs/_config.yml

# build html docs
doxyfile="dox/DoxyHome"
if [ -f ${doxyfile} ]
	then
		doxygen ${doxyfile}
		retVal=$?
		if [ $retVal -ne 0 ]
		then
            echo "Error: exit code ${$retVal} on ${doxyfile}."
            exit $retVal
        fi
fi

# make pdf docs
genPdf Primer
genPdf Reference_Manual
genPdf User_Manual
genPdf Standard_Library_Reference
